https://leetcode.com/explore/learn/card/array-and-string/204/conclusion/1165/

Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:

Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Example 2:

Input: s = "Mr Ding"
Output: "rM gniD"

Constraints:

1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.







class Solution {
    public String reverseWords(String s) {
        int start = 0;
        char[] ca = s.toCharArray();
        
        for(int i = 0; i < ca.length; i++){

            if(ca[i] == ' '){
                reverse(ca, start, i - 1 );
                start = i + 1;
            }
        }
        reverse(ca, start, s.length() -1 );

        return new String(ca);
    }
    
    private void reverse(char[] s, int start, int end){

        while(start <= end){
            char temp = s[start];
            s[start] = s[end];
            s[end] = temp;
            start++;
            end--;
        }
    }
    
}


================================================================================================================================


