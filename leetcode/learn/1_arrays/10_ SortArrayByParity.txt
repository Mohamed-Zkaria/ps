Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.

Return any array that satisfies this condition.

 

Example 1:

Input: nums = [3,1,2,4]
Output: [2,4,3,1]
Explanation: The outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.
Example 2:

Input: nums = [0]
Output: [0]
 

Constraints:

1 <= nums.length <= 5000
0 <= nums[i] <= 5000







class Solution {
    public int[] sortArrayByParity(int[] nums) {
        
        int even_index = 0;
        int odd_index = nums.length - 1;
        
        for(int current_index = 0; 
            current_index < nums.length; 
            current_index++){
            if(nums[current_index] % 2 == 0){
                int temp = nums[even_index];
                nums[even_index] = nums[current_index];
                nums[current_index] = temp;
                even_index++;
            }
        }
        
        return nums;
    }
}



============================================================================================================

